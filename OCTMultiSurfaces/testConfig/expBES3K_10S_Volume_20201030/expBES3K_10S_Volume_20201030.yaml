# base on the trained 10-surface_allGoodBscan_20200512 network on CV5
# test volume by volume of BES3K data

dataDir: "/home/hxie1/data/BES_3K/numpy_10SurfaceSeg/W512/testVolume"
existGTLabel: False
# log will save at: dataDir + "/log/" + network + "/" + experimentName
K: 0  # Kfold cross validation
k: -1   # the fold k test  ,   # do not use cross validation
# training data:  dataDir + training + images_CV{k}.npy
#         label: dataDir + training + surfaces_CV{k}.npy
#         IDs  : dataDir + training + patientID_CV{k}.json

# validation data:  dataDir + validation + images_CV{k}.npy
#           label: dataDir + validation + surfaces_CV{k}.npy
#           IDs  : dataDir + validation + patientID_CV{k}.json

# test data:  dataDir + test + images_CV{k}.npy
#     label: dataDir + test + surfaces_CV{k}.npy
#     IDs  : dataDir + test + patientID_CV{k}.json

# when do not use cross validation:
# training data:  dataDir + training + images.npy
#         label: dataDir + training + surfaces.npy
#         IDs  : dataDir + training + patientID.json

# validation data:  dataDir + validation + images.npy
#           label: dataDir + validation + surfaces.npy
#           IDs  : dataDir + validation + patientID.json

# test data:  dataDir + test + images.npy
#     label: dataDir + test + surfaces.npy
#     IDs  : dataDir + test + patientID.json

groundTruthInteger: True
sigma: 20.0  # For gaussian  ground truth, in float, 0 means use dynamic Sigma
device: torch.device('cuda:3')   #GPU ID
batchSize: 1
volumeInput: True  # volumeInput=True, real batchSize is 31.


# use network: May 14 16:38 expTongren_10Surfaces_AllGood_20200512_CV5
network: "SurfacesUnet_BES3K0512" #"SurfacesUnet"
inputHeight: 496   # original height
inputWidth: 512   # rawImageWidth
scaleNumerator: 1
scaleDenominator: 1
inputChannels: 5 # rawImage + gradChannels
bothSideGrad: False
nLayers: 7
numSurfaces: 10  # num of surfaces in an image
startFilters: 24  # the num of filters in first layer of Unet
gradChannels: 4   # the added gradient channels beside raw image channel
gradWeight: 10   # image grade weight to adjust WeightedDivLoss.

# some physical parameter of images
slicesPerPatient: 31  # for test and validation set
hPixelSize: 3.870  # unit: micrometer, in y/height direction

# data augmentation
augmentProb: 0.4  #  data augmentation rate
gaussianNoiseStd: 0.1 # gausssian nosie std with mean =0
# for salt pepper noise
saltPepperRate: 0.05  # rate = (salt+pepper)/allPixels
saltRate: 0.5  # saltRate = salt/(salt+pepper)
rotation: False
flippingProb: 0.3
lacingWidth: 0  # Lace the both end of 0 or 360 degree to offset inaccurate segementation at boundary of input image
TTA: False       #TestTime Augmentation
TTA_StepDegree: 0 # roration step degree of TTA, in integer degree
# data augmentation

netPath: ""  # net is saved at netpath / network / self_filename
loadNetPath: "/home/hxie1/data/OCT_Tongren/numpy/10FoldCVForMultiSurfaceNet_10Surfaces_AllGoodBscans/netParameters/SurfacesUnet/expTongren_10Surfaces_AllGood_20200512_CV5"
# above reserve for pretrained network.

outputLatent:  True  # output latext vector for a volume
latentDir: "/home/hxie1/data/BES_3K/numpy_10SurfaceSeg/W512/latentVector"

outputXmlSegFiles: True
refXMLFile: "/home/hxie1/data/OCT_Tongren/refXML/1062_OD_9512_Volume_Sequence_Surfaces_Iowa.xml"
xmlOutputDir2: "/home/hxie1/data/BES_3K/numpy_10SurfaceSeg/W512/10SurfPredictionXml"
logDir:  "/home/hxie1/data/BES_3K/numpy_10SurfaceSeg/W512/log"
outputDir: ""

# Proximal IPM Optimization
useProxialIPM: False
learningStepIPM: 0.1
maxIterationIPM: 100
criterionIPM: 0.1 # the criterion of average difference of 2 adjacent iterations in IPM: less than this value, IPM exits.

useDynamicProgramming: False
usePrimalDualIPM: True
useLayerDice: True
useReferSurfaceFromLayer: True
useLayerCE: False
useCEReplaceKLDiv: False
useSmoothSurfaceLoss: True
useWeightedDivLoss: True

